-------------------------------------------------------------------------------
Ｆ１の仕様
-------------------------------------------------------------------------------
Ｆ１について
-------------------------------------------------------------------------------

Ｆ１は、古い音源チップ用のログフォーマットです。
おもに実チップでの楽曲再生を想定しています。

Ｆ１ファイルは、バイナリファイルで拡張子は ".F1" です。
多くのワンボードマイコンで扱えるよう、サイズをなるべく小さくしています。
音源チップの種類やクロックなどの情報を含まないので、
多くの音源チップに柔軟に対応します。

Ｆ１ファイルは、ヘッダーと、音源ログのプレイデータで構成します。

楽曲がＰＣＭ再生を含んでいる場合、Ｆ１ファイルにはＰＣＭデータ ブロックが含まれます。

-------------------------------------------------------------------------------
ヘッダーのフォーマット
-------------------------------------------------------------------------------
ヘッダーは、ファイル先頭、オフセットアドレス 0x000000 に配置します。

ヘッダーのサイズは３２バイトです。

ヘッダーは、プレイデータのレジスタアクセスデータと、
コマンドデータを区別するためのコマンドコードを含みます。

ヘッダー内の複数バイトのデータは、ビッグエンディアンで格納します。

[ヘッダー]

0x000000  46 31           ヘッダー ID     "F1"
0x000002  10              F1 バージョン   1.0
0x000003  xx              ループカウント
0x000004  xx xx xx xx     待ち時間 [ns]
0x000008  xx xx xx xx     PCM データブロックへのオフセット
0x00000C  xx              コマンドコード エンドコード
0x00000D  xx              コマンドコード Ａ１切り替え
0x00000E  xx              コマンドコード ＣＳ切り替え
0x00000F  xx              コマンドコード ループポイント
0x000010  xx              コマンドコード 待ち時間 x １バイトデータ
0x000011  xx              コマンドコード 待ち時間 x ２バイトデータ
0x000012  xx              コマンドコード 待ち時間 x １
0x000013  xx              コマンドコード 待ち時間 x ２
0x000014  xx              コマンドコード 待ち時間 x ３
0x000015  xx              コマンドコード 待ち時間 x ４
0x000016  xx              コマンドコード 待ち時間 x ５
0x000017  xx              コマンドコード 待ち時間 x ６
0x000018  xx              コマンドコード ＤＡＣ書き込み待ち時間 x １バイトデータ
0x000019  xx              コマンドコード ＤＡＣ書き込み待ち時間 ランレングス
0x00001A  xx              コマンドコード ＤＡＣ ＰＣＭ シーク
0x00001B  xx              コマンドコード フリー 0
0x00001C  xx              コマンドコード フリー 1
0x00001D  xx              コマンドコード フリー 2
0x00001E  xx              コマンドコード フリー 3
0x00001F  xx              コマンドコード フリー 4

---------------------------------------
ヘッダー ID   （２バイト）

0x000000  46 31

識別子です。ASCII で "F1"

---------------------------------------
F1バージョン  （１バイト）

0x000002  10

上位４ビットがメジャーバージョンです。下位４ビットがマイナーバージョンです。
今のところ、1.0 から更新の予定はありません。

---------------------------------------
ループカウント （１バイト）

0x000003  xx

ループ再生を行う際の回数を指定します。プレイデータにループ指定がない場合は無効です。

---------------------------------------
待ち時間 [ns]  （４バイト）

0x000004  xx xx xx xx

待ち時間「１」の時間を、ナノ秒で指定します。

---------------------------------------
PCM データブロックのアドレス  （４バイト）

0x000008  xx xx xx xx 

PCM データブロックを含む場合の、PCM データブロックのアドレスを指定します。
アドレスは、ファイル先頭からのアドレスです。
PCM データブロックを含まない場合は、FF FF FF FF を指定します。

---------------------------------------
コマンドコード    各１バイト

0x00000C - 0x00001F

プレイデータ内でコマンドとするバイト値（コマンドコード）を指定します。
コマンドは、用途が決まった１２種類と予備の４種類です。

-------------------------------------------------------------------------------
プレイデータのフォーマット
-------------------------------------------------------------------------------

プレイデータは、ヘッダーの直後のオフセットアドレス 0x20（32）に配置します。

プレイデータは、コマンドデータとレジスタアクセスデータを
楽曲再生に合わせて順番に並べます。

プレイデータ内の、コマンドデータとレジスタアクセスデータとの判別は、
データのバイト値がヘッダーで指定のコマンドコードとの一致で判別します。

---------------------------------------
コマンドデータ
---------------------------------------
エンドコード  （１バイト）

XX

楽曲終了コマンドです。
プレイデータ内にループポイントが配置されている場合、再生位置を
ループポイントに移動します。ループ回数はヘッダーで指定します。

---------------------------------------
Ａ１切り替え  （１バイトまたは２バイト）

XX（A1）

音源チップのＡ１フラグを 0, 1 で交互に切り替えるコマンドです。
Ａ１に 0, 1 以外の指定が必要な音源チップでは、続く１バイトで値を指定します。

---------------------------------------
ＣＳ切り替え  （１バイトまたは２バイト）

XX (CS)

複数の音源チップを搭載するターゲットハードウェアで、
アクセス対象となる音源チップ番号を 0, 1 で交互に切り替えるコマンドです。
音源チップが３つ以上の場合は、続く１バイトで音源チップ番号を指定します。

---------------------------------------
ループポイント  （１バイト）

XX

プレイデータ内で、楽曲のループ位置を指定するコマンドです。

---------------------------------------
待ち時間間隔 x１バイト  （２バイト）

XX tt

プレイデータ内で待ち時間間隔を指定するコマンドです。
待ち時間間隔は、ヘッダーの "待ち時間 [ns]" × 続く１バイトの時間です。

---------------------------------------
待ち時間間隔 x２バイト  （３バイト）

XX tt tt

プレイデータ内で待ち時間間隔を指定するコマンドです。
待ち時間間隔は、ヘッダーの"待ち時間[ns]"×続く２バイトの時間です。

---------------------------------------
待ち時間間隔 x 1～6  （１バイト）

XX

プレイデータ内で待ち時間間隔を指定するコマンドです。
待ち時間[ns] x 1～6までは、これらのコマンドを使います。

--------------------------------
ＤＡＣ書き込み待ち時間 x １バイトデータ  （２バイト）

XX tt

プレイデータ内で、ＰＣＭデータブロックからＤＡＣへの書き込み後の
待ち時間間隔を指定するコマンドです。
待ち時間間隔は、ヘッダーの "待ち時間 [ns]" × 続く１バイトの時間です。

--------------------------------
ＤＡＣ書き込み待ち時間 ランレングス  （３バイト）

XX tt cc 

プレイデータ内で、ＰＣＭデータブロックからＤＡＣへの書き込み後の
待ち時間間隔と回数を指定するコマンドです。
待ち時間間隔は、ヘッダーの "待ち時間 [ns]" × 続く１バイトの時間です。

--------------------------------
ＤＡＣ ＰＣＭ シーク

FD xx xx xx xx    シーク  （５バイト）

ＰＣＭデータのポインターを指定アドレスにシークします。
アドレスは、ＰＣＭデータバイナリのオフセットです。

---------------------------------------
コマンド フリー 0 - 4  （各１バイト）

XX

再生プログラムが任意に使ってよいコマンドコード。
コマンドの内容はF1を再生するプログラムに任されます。

---------------------------------------
コマンドコードについて補足
---------------------------------------
コマンドコードは、音源チップがレジスタ番号に割り当てていないバイト値、
もしくは楽曲再生に関係のないレジスタ番号のバイト値を使い、
レジスタアクセスデータと区別できるようにします。
コマンドコードは、音源チップがレジスタ番号に割り当てていないバイト値、
もしくは楽曲再生に関係のないレジスタ番号のバイト値を使い、
レジスタアクセスデータと区別できるようにします。

---------------------------------------
レジスタアクセスデータ
---------------------------------------

プレイデータ内の、コマンドデータ以外のデータは、レジスタアクセスデータです。

多くの音源チップは、８ビットのレジスタ番号と８ビットのデータで
レジスターにアクセスするためレジスタアクセスデータは、レジスタ番号とデータの
２バイト構成です。

XX XX 

一部の音源チップでは１バイトです。

XX

レジスタアクセスデータのデータ長は、音源チップと再生プログラムの仕様に即します。

-------------------------------------------------------------------------------
[ヘッダーとプレイデータのサンプル]

F1 Header:
0x000000: 46 31           HeaderID        : F1
0x000002: 10              F1 Version      : 1.0
0x000003: 03              Loop Count      : 3
0x000004: 00 00 58 94     OneWaitTime     : 22676[ns]
0x000008: FF FF FF FF     PCM Data Block  : 0xFFFFFFFF
0x00000C: 90              Cmd:EndCode     : 90
0x00000D: 91              Cmd:ChangeA1    : 91
0x00000E: 92              Cmd:ChangeCS    : 92
0x00000F: 93              Cmd:LoopPoint   : 93
0x000010: 94              Cmd:Wait1Byte   : 94
0x000011: 95              Cmd:Wait2Bytes  : 95
0x000012: 96              Cmd:1Wait       : 96
0x000013: 97              Cmd:2Wait       : 97
0x000014: 98              Cmd:3Wait       : 98
0x000015: 99              Cmd:4Wait       : 99
0x000016: 9A              Cmd:5Wait       : 9A
0x000017: 9B              Cmd:6Wait       : 9B
0x000018: 9B              Cmd:WriteWait   : 90
0x000019: 9B              Cmd:WriteWaitRL : 90
0x00001A: 9B              Cmd:PCMSeek     : 90
0x00001B: 90              Cmd:Free0       : 90
0x00001C: 90              Cmd:Free1       : 90
0x00001D: 90              Cmd:Free2       : 90
0x00001E: 90              Cmd:Free3       : 90
0x00001F: 90              Cmd:Free4       : 90
F1 PlayData:
0x000020: 00 00           RegisterCS0:  Write 00 to register 00.
0x000022: 96              Commmand   :  Wait  1.
0x000023: 01 00           RegisterCS0:  Write 00 to register 01.
0x000025: 97              Commmand   :  Wait  2.
0x000026: 08 00           RegisterCS0:  Write 00 to register 08.
0x000028: 97              Commmand   :  Wait  2.
0x000029: 02 00           RegisterCS0:  Write 00 to register 02.
0x00002B: 97              Commmand   :  Wait  2.
0x00002C: 03 0A           RegisterCS0:  Write 0A to register 03.
0x00002E: 97              Commmand   :  Wait  2.
0x00002F: 09 0A           RegisterCS0:  Write 0A to register 09.
0x000031: 97              Commmand   :  Wait  2.
0x000032: 04 A0           RegisterCS0:  Write A0 to register 04.
0x000034: 96              Commmand   :  Wait  1.
0x000035: 05 02           RegisterCS0:  Write 02 to register 05.
0x000037: 97              Commmand   :  Wait  2.
0x000038: 0A 0C           RegisterCS0:  Write 0C to register 0A.
0x00003A: 99              Commmand   :  Wait  4.
0x00003B: 06 00           RegisterCS0:  Write 00 to register 06.
0x00003D: 9A              Commmand   :  Wait  6.
0x00003E: 07 A9           RegisterCS0:  Write A9 to register 07.
0x000040: 94 1E           Commmand   :  WaitByte  30
0x000042: 92              Commmand   :  ChangeCS  To 1
0x000043: 82 19           RegisterCS1:  Write 19 to register 82.

---------------------------------------------------------------------
ＰＣＭデータブロックのフォーマット
---------------------------------------------------------------------

ＰＣＭデータは、ＤＡＣやＡＤＰＣＭなどのＰＣＭバイナリデータを格納します。

複数個の音源チップに対応をする場合や、音源チップが複数のPCM機能を持つ場合
複数のＰＣＭデータブロックを格納します。

１つのＰＣＭデータブロックは、１２バイトのヘッダとバイナリデータで構成します。
--------------------------------
PCMデータブロックの構造
--------------------------------
0x000000  xx              チップセレクト
0x000001  xx              データタイプ
0x000002  xx xx xx xx     スタートアドレス
0x000006  xx xx xx xx     サイズ
0x00000A  xx xx xx xx     次のPCMデータブロックのオフセット

チップセレクト
ＰＣＭデータブロックを使う音源チップの番号を指定します。

データタイプ
音源チップが搭載するＰＣＭ機能の識別に利用します。
値は音源チップに依存します。

スタートアドレス
ＰＣＭバイナリデータをロードするターゲットハードウェア上の
メモリアドレスを指定します。

サイズ
ＰＣＭバイナリデータのバイトサイズを指定します。

次のＰＣＭデータブロックのオフセット
複数のＰＣＭデータブロックを格納する場合に、次のＰＣＭデータブロックのアドレスを指定します。
アドレスは、ファイル先頭からの位置を示します。
次のデータが存在しない場合は、FF FF FF FF を指定します。

0x00000C から、バイナリデータを格納します。
---------------------------------------------------------------------
